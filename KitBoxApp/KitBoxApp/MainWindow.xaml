<Window x:Class="KitBox.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:KitBox"
        xmlns:core="clr-namespace:KitBox.Core"
        mc:Ignorable="d"
        Title="MainWindow" Height="887" Width="1362.575" WindowStartupLocation="CenterScreen" WindowState="Maximized" WindowStyle="None">

    <Grid x:Name="mainGrid" Background="{StaticResource BackbroungColor}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="2*"/>
            <ColumnDefinition Width="8*"/>
        </Grid.ColumnDefinitions>
        <TabControl  ItemContainerStyle="{StaticResource TabItemStyle}" Background="{StaticResource SecondaryBackgroud}" Margin="1,1,0,1" Grid.Row="0" Grid.Column="0" UseLayoutRounding="False" Padding="40,0,40,0" BorderThickness="0">
            <TabItem Header="Cupboard" RenderTransformOrigin="0.5,0.5">
                <StackPanel x:Name="cupboardConfig" DataContext="{Binding Cupboard}">
                    <TextBlock Style="{StaticResource labelStyle}" >Height</TextBlock>
                    <TextBlock x:Name="cupboardHeight" Padding="8" Background="#FFE6E6E6" Text="{Binding Path=Height}"/>
                    <TextBlock Style="{StaticResource labelStyle}">Width</TextBlock>
                    <ComboBox Style="{StaticResource ComboStyle}" x:Name="widthComboBox" SelectedItem="{Binding Path=Width}" ItemsSource="{Binding Path=CupboardConstraint.Widths}" SelectedIndex="0"/>
                    <TextBlock Style="{StaticResource labelStyle}">Depth</TextBlock>
                    <ComboBox Style="{StaticResource ComboStyle}" x:Name="depthComboBox" SelectedItem="{Binding Path=Depth}" ItemsSource="{Binding Path=CupboardConstraint.Depths}" SelectedIndex="0"/>
                    <TextBlock Style="{StaticResource labelStyle}">Steel Corner</TextBlock>
                    <ComboBox Style="{StaticResource ComboStyle}" x:Name="steelCornerCombo" SelectedItem="{Binding Path=SteelCornerColor}" ItemsSource="{Binding Path=CupboardConstraint.SteelCornerColors}" SelectedIndex="0"/>
                </StackPanel>
            </TabItem>
            <TabItem  Header="Boxes">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition Height="20"/>
                    </Grid.RowDefinitions>
                    <StackPanel  x:Name="boxesConfig" DataContext="{Binding SelectedBox}">
                        <TextBlock Style="{StaticResource labelStyle}">Pane color</TextBlock>
                        <ComboBox Style="{StaticResource ComboStyle}" x:Name="paneColorCombo" SelectedItem="{Binding Path=LateralColor}" ItemsSource="{Binding Path=BoxConstraint.VColors}"/>
                        <TextBlock Style="{StaticResource labelStyle}">Top and bottom color</TextBlock>
                        <ComboBox Style="{StaticResource ComboStyle}" x:Name="hPaneColorCombo" SelectedItem="{Binding Path=HorizontalColor}" ItemsSource="{Binding Path=BoxConstraint.HColors}"/>
                        <TextBlock Style="{StaticResource labelStyle}">Door style</TextBlock>
                        <ComboBox Style="{StaticResource ComboStyle}" x:Name="doorStyleCombo" SelectedItem="{Binding Path=Accessories[0].Color}" ItemsSource="{Binding Path=Accessories[0].DoorConstraint.Colors}"/>
                        <TextBlock Style="{StaticResource labelStyle}">Height</TextBlock>
                        <ComboBox Style="{StaticResource ComboStyle}" x:Name="boxHeighCombo"  SelectedItem="{Binding Path=Height}" ItemsSource="{Binding Path=BoxConstraint.Heights}"/>
                    </StackPanel>
                </Grid>
            </TabItem>
        </TabControl>
        <ListView  
            x:Name="drawBox" 
            Background="Transparent"
            Grid.Column="1" 
            Grid.Row="0" 
            ItemsSource="{Binding Cupboard.Boxes}" 
            SelectedItem="{Binding SelectedBox}"
            IsSynchronizedWithCurrentItem="True" 
            HorizontalAlignment="Center" 
            BorderThickness="0" 
            Padding="0" 
            Margin="0,100"
            VerticalAlignment="Bottom" 
            RenderTransformOrigin="0.5,0.5" 
            Panel.ZIndex="-2" 
            ScrollViewer.CanContentScroll="False" 
            ItemContainerStyle="{StaticResource BoxShapeListStyle}"
            >

            <ListView.RenderTransform>
                <TransformGroup>
                    <ScaleTransform ScaleY="-1"/>
                    <SkewTransform/>
                    <RotateTransform/>
                </TransformGroup>
            </ListView.RenderTransform>

            <ListView.ItemTemplate >
                <DataTemplate x:Name="ShapeTemplate" >
                    <local:BoxShape x:Name="Shape"   BHeight="{Binding Path=Height, Mode=OneWay}" BWidth="{Binding Path=Cupboard.Width, Mode=OneWay}" Door="{Binding Path=Accessories[0].Color, Mode=OneWay}"  Stroke="{StaticResource ActionColor}" StrokeThickness="1" Margin="0,0,0,0" RenderTransformOrigin="0.5,0.5" />
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}},Path=IsSelected}" Value="True">
                            <Setter TargetName="Shape" Property="StrokeThickness" Value="2"/>
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
        <Canvas Grid.Column="1">
            <StackPanel Canvas.Right="30" Canvas.Top="30">
                <Button x:Name="add_button" Style="{StaticResource roundedButton}" Content="{DynamicResource AddIcon }" Command="{Binding AddBoxCommand}"/>
                <Button x:Name="delete_buttn" Style="{StaticResource roundedButton}" Content="{StaticResource DeleteIcon}" Command="{Binding DeleteBoxCommand}"/>
                <Button x:Name="validate_button" Style="{StaticResource roundedButton}" Content="{StaticResource ValdidateIcon}" Command="{Binding ValidateCommand}"/>
                <Button x:Name="reset_button"  Style="{StaticResource roundedButton}" Content="{StaticResource RefreshIcon}" Command="{Binding ResetCommand}"/>
            </StackPanel>
            
        </Canvas>
    </Grid>
</Window>
